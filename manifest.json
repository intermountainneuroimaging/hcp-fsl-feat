{
    "author": "Intermountain Neuroimaging Consortium",
    "cite": "https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/FEAT#Referencing",
    "command": "python /flywheel/v0/run.py",
    "config": {
      "task-name": {
          "description": "One task may be selected for FEAT 1st level analysis. Task name must be consistent with naming used in preprocessing package.",
          "type": "string"
      },
      "output-name": {
          "description": "[NAME].feat directory name. If left blank, output name will be drawn from the fsf template file.",
          "type": "string"
      },
      "motion-confound": {
          "type":"boolean",
          "default": false,
          "description": "Add 6-DOF head motion parameters as confound regressors."
      },
      "dummy-scans": {
          "type": "integer",
          "default": 0,
          "description": "Add [NUMBER] dummy scan confound regressors to the start of the trial. Used to account for initial signal stabilization. "
      },
      "gear-log-level": {
        "default": "INFO",
        "description": "Gear Log verbosity level (ERROR|WARNING|INFO|DEBUG)",
        "type": "string",
        "enum": [
          "ERROR",
          "WARNING",
          "INFO",
          "DEBUG"
        ]
      },
      "gear-dry-run": {
          "default": false,
          "description": "Do everything except actually executing qsiprep",
          "type": "boolean"
      },
      "gear-writable-dir": {
          "default": "/pl/active/ics/fw_temp_data",
          "description": "Gears expect to be able to write temporary files in /flywheel/v0/.  If this location is not writable (such as when running in Singularity), this path will be used instead.  fMRIPrep creates a large number of files so this disk space should be fast and local.",
          "type": "string"
      },
      "slurm-cpu": {
          "default": "1",
          "description": "[SLURM] How many cpu-cores to request per command/task. This is used for the underlying '--cpus-per-task' option. If not running on HPC, then this flag is ignored",
          "type": "string"
      },
      "slurm-ram": {
          "default": "12G",
          "description": "[SLURM] How much RAM to request. This is used for the underlying '--mem-per-cpu' option. If not running on HPC, then this flag is ignored",
          "type": "string"
      },
      "slurm-ntasks": {
          "default": "1",
          "description": "[SLURM] Total number of tasks/commands across all nodes (not equivalent to neuroimaging tasks). Using a value greater than 1 for code that has not been parallelized will not improve performance (and may break things).",
          "type": "string"
      },
      "slurm-nodes": {
          "default": "1",
          "description": "[SLURM] How many HPC nodes to run on",
          "type": "string"
      },
      "slurm-partition": {
          "default": "blanca-ics",
          "description": "[SLURM] Blanca, Alpine, or Summit partitions can be entered",
          "type": "string"
      },
      "slurm-qos": {
          "default": "blanca-ics",
          "description": "[SLURM] For Blanca the QOS has a different meaning, ie blanca-ics vs blanca-ibg, etc. For Alpine and Summit, the QOS should be set to normal if running a job for 1 day or less, and set to long if running a job with a maximum walltime of 7 days",
          "type": "string"
      },
      "slurm-account": {
          "default": "blanca-ics",
          "description": "[SLURM] For Blanca the ACCOUNT should be set to the sub-account of choice (e.g. blanca-ics-rray). For Alpine, the account should be set to ucb-general, or the specialized account granted by RC: ucb278_asc1",
          "type": "string"
      },
      "slurm-time": {
          "default": "1428",
          "description": "[SLURM] Maximum walltime requested after which your job will be cancelled if it hasn't finished. Default to 1 day",
          "type": "string"
      }
    },
    "custom": {
        "flywheel": {
          "classification": [
            "fMRI"
          ],
          "components": [
            "FSL"
          ],
          "modality": [
            "MR"
          ],
          "suite": "Computational Models (GLM, etc)",
          "type": [
            "NIFTI"
          ]
        },
        "gear-builder": {
            "category": "analysis",
            "image": "amhe4269/hcp-fsl-feat:6.0.4_inc0.0rc9"
        },
        "license": "Apache-2.0"
    },
    "description": "UNDER DEVELOPMENT!! (HPC Compatible) FSL's FEAT (FMRI Expert Analysis Tool). As implemented in this Gear, FEAT first level analysis will act on HCP Preporcessing Pipeline outputs. Check out additional gears for using FSL FEAT with other preprocessing pipelines, or standalone. Voxelwise activation analyses for a single task will be generated. A template FSF design file is required, and all processing steps indicated in the design file will be followed.",
    "environment": {
        "FSF_OUTPUT_FORMAT": "nii.gz",
        "FSLDIR": "/opt/fsl-6.0.4",
        "USER": "flywheel",
        "FSLMULTIFILEQUIT": "TRUE",
        "FSLOUTPUTTYPE": "NIFTI_GZ",
        "FSLTCLSH": "/opt/fsl-6.0.4/bin/fsltclsh",
        "FSLWISH": "/opt/fsl-6.0.4/bin/fslwish",
        "FSL_PYTHON": "${FSLDIR}/fslpython/envs/fslpython",
        "LD_LIBRARY_PATH": "/usr/share/fsl/lib:/usr/share/fsl/lib",
        "PATH": "/opt/poetry/bin:/opt/venv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/fsl-6.0.4/bin",
        "REQUESTS_CA_BUNDLE": "/etc/ssl/certs/ca-certificates.crt",
        "python3": "/opt/venv/bin/python3",
        "python": "/opt/venv/bin/python",
        "FLYWHEEL": "/flywheel/v0",
        "POETRY_HOME": "/opt/poetry",
        "POETRY_VERSION": "1.1.13",
        "POETRY_VIRTUALENVS_CREATE": "false"
    },
    "inputs": {
      "api-key": {
          "base": "api-key"
      },
      "functional_zip": {
        "description": "Select functional run for ICA",
        "base": "file",
        "optional": false
      },
      "icafix_functional_zip": {
        "description": "Select functional run for ICA",
        "base": "file",
        "optional": true
      },
      "structural_zip": {
        "description": "Select structural zip for the functional data",
        "base": "file",
        "optional": false
      },
      "event-files": {
        "base": "file",
        "description": "Explanatory variable (EVs) custom text files. Identify in config options the event files type (BIDS-Formatted|FSL-3 Column Format|FSL-1 Entry Per Volume)",
        "optional": true
      },
      "FSF_TEMPLATE" : {
        "base": "file",
        "description": "FSL DESIGN FILE that will be used as the template for all analyses. Record all common processing decisions in this file, for example slice-timing correction, intensity normization, EV naming and design. ",
         "type": {
          "enum": [
            "text"
          ]
        }
      }
    },
    "label": "HCP-FSL: FEAT - fMRI preprocessing (v6.0)",
    "license": "MIT",
    "maintainer": "Amy Hegarty <amhe4260@colorado.edu>",
    "name": "hcp-fsl-feat",
    "source": "https://github.com/intermountainneuroimaging/hcp-fsl-feat",
    "url": "http://fsl.fmrib.ox.ac.uk/fsl/fslwiki/FEAT",
    "version": "6.0.4_inc0.0rc9"
}